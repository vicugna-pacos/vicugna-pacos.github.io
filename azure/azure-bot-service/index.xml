<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure Bot Service on アルパカのメモ</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/</link><description>Recent content in Azure Bot Service on アルパカのメモ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 30 Sep 2020 17:24:04 +0900</lastBuildDate><atom:link href="https://vicugna-pacos.github.io/azure/azure-bot-service/index.xml" rel="self" type="application/rss+xml"/><item><title>まず始めてみる</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/get-started/</link><pubDate>Wed, 23 Sep 2020 19:11:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/get-started/</guid><description>前提条件 Visual Studio 2019 Community 版で開発 言語はC#を選択 まず始めてみる 参考：Bot Framework SDK for .NET を使用したボットの作成 - Bot Service | Microsoft Docs Bot Service Emulator をインストール Bot Service Emulator Bot Service Emulatorは、ローカルでボットをテストするためのツール。</description></item><item><title>Azure Bot Service でボットを作成する(GitHubでデプロイ版)</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/deploy/</link><pubDate>Mon, 12 Oct 2020 15:25:42 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/deploy/</guid><description>はじめに Azure Bot Service でボットを作成するとき、公式ドキュメントのクイックスタートの手順に従うと、まずローカルでボットのソースコードを作成した後、CLIでAzureのリソースを作成しつつデプロイする手順になって</description></item><item><title>Azure Bot Service でボットを作成する(VS Code 版)</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/deploy-with-vscode/</link><pubDate>Mon, 12 Oct 2020 15:25:42 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/deploy-with-vscode/</guid><description>はじめに Azure Bot Service でのボット開発を VS Code で行い、GitHubと連携して CI/CD する手順。 前提条件： Windows 10 SDKはC#を選択 Bot Framework Emulator インストール済 VS Code インストール済 参考：Bot Framework SDK for .NET を使用したボットの作成 - Bot Service | Microsoft Docs</description></item><item><title>ボットのしくみ</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/basics/</link><pubDate>Wed, 23 Sep 2020 19:11:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/basics/</guid><description>前提条件 Visual Studio 2019 Community 版で開発 言語はC#を選択 ボットのしくみ 参考：ボットのしくみ - Bot Service | Microsoft Docs ユーザーとボットとの間で行われるやり取りに「アクティビティ」が発生する。 Bot Framework Serviceは、ユーザーがボットとの</description></item><item><title>テキストメッセージの送受信</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/send-and-receive-message/</link><pubDate>Fri, 02 Oct 2020 15:09:42 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/send-and-receive-message/</guid><description>メッセージの受信 ユーザーが送ってきたメッセージは、以下のようにして受け取る。 var responseMessage = turnContext.Activity.Text; メッセージの送信 ボットからシンプルなテキストを送るには、以下のようにする。 await turnContext.SendActivityAsync(&amp;#34;Welcome!&amp;#34;); または、以下のようにする。 var text = &amp;#34;Welcome!&amp;#34;; var msg</description></item><item><title>State (記憶)の管理</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/state/</link><pubDate>Fri, 02 Oct 2020 12:04:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/state/</guid><description>Stateの保存場所 ボットは、Webアプリケーションと同じように基本的にはステートレスである。 1回目のターンでやりとりした内容は、基本的には2回目ではもう覚えていない。 しかし、より充実した機能を提供す</description></item><item><title>Dialog (会話の流れ)</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/dialog/</link><pubDate>Fri, 02 Oct 2020 13:55:11 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/dialog/</guid><description>Dialogは、ユーザーとの複数回にわたる会話のやりとりの管理を助けるライブラリである。 ライブラリを参照に追加する ボットで Dialog を使うには、プロジェクトにライブラリの参照を追加する。 VS Code でプロジェクトを開</description></item><item><title>ボットからメッセージを送る</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/proactive-message/</link><pubDate>Wed, 23 Sep 2020 19:11:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/proactive-message/</guid><description>前提条件 Visual Studio 2019 Community 版で開発 言語はC#を選択 ボット側からメッセージを送る 参考：ユーザーへのプロアクティブな通知の送信 - Bot Service | Microsoft Docs チャットボットは、基本的にユーザーから会話が始まりボットは返信するだけだが、</description></item></channel></rss>