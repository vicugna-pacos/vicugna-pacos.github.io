<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.NET Core on アルパカのメモ</title><link>https://vicugna-pacos.github.io/dotnetcore/</link><description>Recent content in .NET Core on アルパカのメモ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 24 Nov 2020 16:30:03 +0900</lastBuildDate><atom:link href="https://vicugna-pacos.github.io/dotnetcore/index.xml" rel="self" type="application/rss+xml"/><item><title>汎用ホストでバッチ処理</title><link>https://vicugna-pacos.github.io/dotnetcore/generic-host/</link><pubDate>Thu, 26 Nov 2020 15:01:47 +0900</pubDate><guid>https://vicugna-pacos.github.io/dotnetcore/generic-host/</guid><description>概要 前提条件： .NET Core 3.1 Visual Studio 2019 で開発 ASP.NETで提供されているいくつかの機能を、コンソールアプリでも使えるよう汎用的にしたもの。 使えるようになる機能の例は下記の通り。 依存性の注入 (DI) ログ 設定ファイル 参考</description></item><item><title>コンソールアプリでログ出力</title><link>https://vicugna-pacos.github.io/dotnetcore/logging/</link><pubDate>Thu, 26 Nov 2020 09:34:54 +0900</pubDate><guid>https://vicugna-pacos.github.io/dotnetcore/logging/</guid><description>概要 前提条件： .NET Core 3.1 Visual Studio 2019 で開発 ASP.NET なら初めから使える(っぽい)ログ出力の機能を、コンソールアプリで使用する方法。 Microsoft.Extensions.Logging パッケージを使用するが、一番お手軽(と思われる)なファイルへの出力機能がない。 コンソー</description></item><item><title>設定ファイルをコンソールアプリで使用する</title><link>https://vicugna-pacos.github.io/dotnetcore/configfile/</link><pubDate>Tue, 24 Nov 2020 16:32:22 +0900</pubDate><guid>https://vicugna-pacos.github.io/dotnetcore/configfile/</guid><description>概要 .NET Core のコンソールアプリケーションでも設定ファイルを利用できる。 NuGet パッケージの Microsoft.Extensions.Configuration とその配下のパッケージを使う。 キーと値のペア かつ キーは複数レベルの階層にわたる設定が作れる。 たとえば、SampleAp</description></item></channel></rss>