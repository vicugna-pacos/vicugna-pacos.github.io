<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>アルパカのメモ</title><link>https://vicugna-pacos.github.io/</link><description>Recent content on アルパカのメモ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 08 Oct 2020 11:12:12 +0900</lastBuildDate><atom:link href="https://vicugna-pacos.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>はじめの一歩</title><link>https://vicugna-pacos.github.io/hugo/create-theme/get-started/</link><pubDate>Wed, 30 Sep 2020 18:55:51 +0900</pubDate><guid>https://vicugna-pacos.github.io/hugo/create-theme/get-started/</guid><description>はじめに Hugoのテーマを作るときに、まずやること。 Hugo バージョン：v0.74.3 テーマをテストするためのサイトを用意する まずテーマを表示するためのサイトを作成する。公式で用意されているサンプル用のサイ</description></item><item><title>まず始めてみる</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/get-started/</link><pubDate>Wed, 23 Sep 2020 19:11:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/get-started/</guid><description>前提条件 Visual Studio 2019 Community 版で開発 言語はC#を選択 まず始めてみる 参考：Bot Framework SDK for .NET を使用したボットの作成 - Bot Service | Microsoft Docs Bot Service Emulator をインストール Bot Service Emulator Bot Service Emulatorは、ローカルでボットをテストするためのツール。</description></item><item><title>Hugoで静的Webサイトを作る</title><link>https://vicugna-pacos.github.io/hugo/hugo/</link><pubDate>Thu, 27 Aug 2020 15:54:58 +0900</pubDate><guid>https://vicugna-pacos.github.io/hugo/hugo/</guid><description>Hugoとは 静的サイトジェネレータ。MarkdownファイルをHTMLファイルへ変換し、Webサイトにできるツール。 公式サイト バージョン：v0.74.3 説明の前提条件 Hugoアプリケーションの置場所：</description></item><item><title>基本文法など</title><link>https://vicugna-pacos.github.io/hugo/create-theme/introduction/</link><pubDate>Wed, 30 Sep 2020 19:12:45 +0900</pubDate><guid>https://vicugna-pacos.github.io/hugo/create-theme/introduction/</guid><description>はじめに Hugo バージョン：v0.74.3 Hugoのテンプレートは、Go言語の html/template とか text/template というライブラリを使用する。 詳しい使い方については、上記ライブラリのドキュメントを参照。 基本の文法 HTMLファイルで作っ</description></item><item><title>ボットのしくみ</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/basics/</link><pubDate>Wed, 23 Sep 2020 19:11:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/basics/</guid><description>前提条件 Visual Studio 2019 Community 版で開発 言語はC#を選択 ボットのしくみ 参考：ボットのしくみ - Bot Service | Microsoft Docs ユーザーとボットとの間で行われるやり取りに「アクティビティ」が発生する。 Bot Framework Serviceは、ユーザーがボットとの</description></item><item><title>HugoとGitHub ActionsでGitHub Pagesを自動デプロイ</title><link>https://vicugna-pacos.github.io/hugo/hugo-github-actions/</link><pubDate>Sun, 23 Aug 2020 15:25:53 +0900</pubDate><guid>https://vicugna-pacos.github.io/hugo/hugo-github-actions/</guid><description>前提条件 Windows 10 Hugo v0.74.3(Windows版)がPCにインストール済み はじめに GitHub Pagesは所定のリポジトリをJekyllで変換して公開してくれるが、これをHugoを使って公開するようにしたい。 ロー</description></item><item><title>各テンプレートファイルについて</title><link>https://vicugna-pacos.github.io/hugo/create-theme/each-template-file/</link><pubDate>Wed, 26 Aug 2020 00:00:00 +0900</pubDate><guid>https://vicugna-pacos.github.io/hugo/create-theme/each-template-file/</guid><description>はじめに Hugoのテーマの作り方。 Hugo バージョン：v0.74.3 baseof.htmlを作る このファイルが全てのページのベースとなる。 layouts\_default\baseof.htmlを開くと、す</description></item><item><title>ボットからメッセージを送る</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/proactive-message/</link><pubDate>Wed, 23 Sep 2020 19:11:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/proactive-message/</guid><description>前提条件 Visual Studio 2019 Community 版で開発 言語はC#を選択 ボット側からメッセージを送る 参考：ユーザーへのプロアクティブな通知の送信 - Bot Service | Microsoft Docs チャットボットは、基本的にユーザーから会話が始まりボットは返信するだけだが、</description></item><item><title>こんなときはこうする</title><link>https://vicugna-pacos.github.io/hugo/create-theme/how-to/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0900</pubDate><guid>https://vicugna-pacos.github.io/hugo/create-theme/how-to/</guid><description>日付のフォーマット Go独特の書き方をする。 例えば、年はyyyyとかではなく、2006と書く。フィールドごとに固定値があるらしい。 以下、Goのページから引っ張ってきた表記のサンプル： ANSIC = &amp;quot;Mon Jan _2 15:04:05 2006&amp;quot; UnixDate = &amp;quot;Mon</description></item><item><title>テキストメッセージの送受信</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/send-and-receive-message/</link><pubDate>Fri, 02 Oct 2020 15:09:42 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/send-and-receive-message/</guid><description>メッセージの受信 ユーザーが送ってきたメッセージは、以下のようにして受け取る。 var responseMessage = turnContext.Activity.Text; メッセージの送信 ボットからシンプルなテキストを送るには、以下のようにする。 await turnContext.SendActivityAsync(&amp;#34;Welcome!&amp;#34;); または、以下のようにする。 var text = &amp;#34;Welcome!&amp;#34;; var msg</description></item><item><title>記憶の管理</title><link>https://vicugna-pacos.github.io/azure/azure-bot-service/state/</link><pubDate>Fri, 02 Oct 2020 12:04:50 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/azure-bot-service/state/</guid><description>記憶の保存場所 ボットは、Webアプリケーションと同じように基本的にはステートレスである。 1回目のターンでやりとりした内容は、基本的には2回目ではもう覚えていない。 しかし、より充実した機能を提供するには</description></item><item><title>予算を作成して課金のアラートを設定する</title><link>https://vicugna-pacos.github.io/azure/budget-create/</link><pubDate>Thu, 08 Oct 2020 11:12:12 +0900</pubDate><guid>https://vicugna-pacos.github.io/azure/budget-create/</guid><description>クラウドの課金は怖いので、設定額を超えたらアラートが飛ぶようにする。 Azure ポータルサイトの左上にある「三」→「コストの管理と請求」をクリックする。 各項目を入力して「次へ」をクリック。 名前 - 予算の名前を入力</description></item><item><title>PowerShellでOutlookを操作する</title><link>https://vicugna-pacos.github.io/powershell/outlook/</link><pubDate>Wed, 30 Sep 2020 20:08:58 +0900</pubDate><guid>https://vicugna-pacos.github.io/powershell/outlook/</guid><description>はじめに PowerShellでVBAみたいなことができる Outlook版。 前提条件 PowerShell v5.1 Outlook 365 起動と終了 function main() { # 起動済みのOutlookがあるか確認 $outlookProcess = Get-Process -Name &amp;#34;OUTLOOK&amp;#34; -ErrorAction SilentlyContinue $needQuit = $false if ($outlookProcess -eq $null) { $needQuit = $true } $outlook = New-Object -ComObject Outlook.Application try { $namespace =</description></item><item><title>DX Suite の画像補正豆知識</title><link>https://vicugna-pacos.github.io/others/0916-dxsuite-color/</link><pubDate>Wed, 16 Sep 2020 14:37:05 +0900</pubDate><guid>https://vicugna-pacos.github.io/others/0916-dxsuite-color/</guid><description>はじめに AI-OCRサービスの DX Suite にある画像補正設定の、各設定項目がよく分からなかったので調べてみた。 カラー画像 カラー原稿をグレースケールへ変換する際に行う補正について設定する。 フィルタ：色背景除去(</description></item><item><title>pdfファイルを画像にする</title><link>https://vicugna-pacos.github.io/others/0911-pdf-to-image/</link><pubDate>Fri, 11 Sep 2020 11:03:37 +0900</pubDate><guid>https://vicugna-pacos.github.io/others/0911-pdf-to-image/</guid><description>概要 PDFファイルをpngなどの画像へ変換する方法。 フリーの画像編集ソフト「Inkscape」を使う。 (使用したバージョン：1.0.1) 仕事でOCRサービスを使っているが、スキャンした書類から文字を消</description></item><item><title>Visual Studio Code の色々</title><link>https://vicugna-pacos.github.io/others/0823-vscode-tips/</link><pubDate>Sun, 23 Aug 2020 19:20:57 +0900</pubDate><guid>https://vicugna-pacos.github.io/others/0823-vscode-tips/</guid><description>はじめに VSCodeの使い方Tips色々 設定画面を開く Ctrl + , を押す。 または、メニューの「ファイル」→「ユーザー設定」→「設定」。 シングルクリックでファイルが開かないようにする 既定だと、ファイルをシング</description></item></channel></rss>