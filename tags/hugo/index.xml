<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on アルパカのメモ</title><link>https://vicugna-pacos.github.io/tags/hugo/</link><description>Recent content in Hugo on アルパカのメモ</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Aug 2020 15:54:58 +0900</lastBuildDate><atom:link href="https://vicugna-pacos.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugoで静的Webサイトを作る</title><link>https://vicugna-pacos.github.io/posts/2020/0827-hugo/</link><pubDate>Thu, 27 Aug 2020 15:54:58 +0900</pubDate><guid>https://vicugna-pacos.github.io/posts/2020/0827-hugo/</guid><description>Hugoとは 静的サイトジェネレータ。MarkdownファイルをHTMLファイルへ変換し、Webサイトにできるツール。
公式サイト
バージョン：v0.74.3
説明の前提条件 Hugoアプリケーションの置場所：C:\Hugo\bin
上記フォルダにPATHを通すので、置場所は違っていても大した問題ではない。
Webサイトのソースの置場所：C:\Hugo\Sites
これも実際はどこでも構わない。
インストール Hugoのバイナリを https://github.com/gohugoio/hugo/releases からダウンロードする。 Windows用のバイナリを探してダウンロード。 zipファイルを解凍したら、C:\Hugo\binをPATHに追加する。 もしexeファイルがhugo.exeではない場合、ファイル名を変更しておく。
稼働確認 コマンドプロンプトを起動し、hugo helpと入力する。以下のようなヘルプが出ればOK。
hugo is the main command, used to build your Hugo site. Hugo is a Fast and Flexible Static Site Generator built with love by spf13 and friends in Go. Complete documentation is available at http://gohugo.io/. Usage: hugo [flags] hugo [command] Available Commands: config Print the site configuration convert Convert your content to different formats ※以下略 コマンドプロンプトは、「管理者として実行」しないとhugoコマンドが動作しない場合がある。 (おそらくログオンアカウントの権限による)</description></item><item><title>HugoとGitHub ActionsでGitHub Pagesを自動デプロイ</title><link>https://vicugna-pacos.github.io/posts/2020/0823-hugo-github-actions/</link><pubDate>Sun, 23 Aug 2020 15:25:53 +0900</pubDate><guid>https://vicugna-pacos.github.io/posts/2020/0823-hugo-github-actions/</guid><description>前提条件 Windows 10 Hugo v0.74.3(Windows版)がPCにインストール済み はじめに GitHub Pagesは所定のリポジトリをJekyllで変換して公開してくれるが、これをHugoを使って公開するようにしたい。 ローカルでHugoのパブリッシュを実行してコミット…という風に手動でやるのは面倒くさいので、mdファイルをコミット＆プッシュしたら、自動的にGitHub Pagesで公開されてほしい。
GitHub Pagesの公開先は&amp;lt;user&amp;gt;.github.ioとする。
Hugoの使い方については、下記参照。
【Hugo】静的Webサイトを作る - Qiita
GitHubにリポジトリを作成する &amp;lt;user&amp;gt;.github.ioという名前のpublicリポジトリを作成する。自動的にGitHub Pagesのユーザーページ元リポジトリとなる。
リポジトリをクローン PCにて、作成したリポジトリをクローンする。
Hugoで新しいサイトを作る クローンしたフォルダの親フォルダで下記コマンドを実行。
hugo new site [リポジトリのフォルダ名] --force 既存フォルダに対してのnew siteなので、フラグの--forceが必要。 Hugoのフォルダやファイルが作成される。
その後、テーマを設定しておく。
GitHub Actionsを設定 GitHub Actions による GitHub Pages への自動デプロイ - Qiita
上記記事を参考に、ローカルリポジトリで.github/workflows/gh-pages.ymlを作成し、サンプルをコピペする。
name: github pages on: push: branches: - master jobs: deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes fetch-depth: 0 # Fetch all history for .</description></item></channel></rss>